# ===========================================================
# ๐ Microsoft Stock Data Analysis Project
# -----------------------------------------------------------
# This project performs exploratory data analysis on Microsoft 
# stock historical data using pandas and matplotlib. It includes:
# - Data preprocessing (datetime conversion)
# - Statistical summaries
# - Day-of-week extraction
# - Date range filtering
# - Visualization of stock trends
# - Monthly resampling and aggregation
# Perfect for financial data insight and time-series visualization.
# ===========================================================

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# ูุฑุงุกุฉ ุงูุจูุงูุงุช ูู ููู CSV
data = pd.read_csv('Microsoft_Stock.csv')

# ุชุญููู ุนููุฏ ุงูุชุงุฑูุฎ ูู ูุต ุฅูู datetime object
data["Date"] = pd.to_datetime(data["Date"], format="%m/%d/%Y %H:%M:%S")

# ุนุฑุถ ุฃูู 5 ุตููู ูู ุงูุจูุงูุงุช
print(data.head())

# ุนุฑุถ ูุนูููุงุช ุนุงูุฉ ุนู ุงูุฃุนูุฏุฉ ูููุน ุงูุจูุงูุงุช
print(data.info())

# ุนุฑุถ ุฅุญุตุงุฆูุงุช ูุตููุฉ ููุจูุงูุงุช
print(data.describe())

# ุฅุถุงูุฉ ุนููุฏ ูุญุชูู ุนูู ุงุณู ููู ุงูุฃุณุจูุน ููู ุชุงุฑูุฎ
data["days of week"] = data["Date"].dt.day_name()
print(data)

# ุงุณุชุฎุฑุงุฌ ุงุณู ุงูููู ูุฃูู ุตู ูู ุงูุจูุงูุงุช
day = data.loc[0, "Date"].day_name()
print(day)

# ุทุจุงุนุฉ ุฃูุฏู ุชุงุฑูุฎ ูู ุงูุจูุงูุงุช
print(data["Date"].min())

# ุทุจุงุนุฉ ุฃุญุฏุซ ุชุงุฑูุฎ ูู ุงูุจูุงูุงุช
print(data["Date"].max())

# ุญุณุงุจ ุงููุชุฑุฉ ุงูุฒูููุฉ ุจูู ุฃูุฏู ูุฃุญุฏุซ ุชุงุฑูุฎ
print(data["Date"].max() - data["Date"].min())

# ุนุฑุถ ุงูุตููู ุงูุชู ุจุนุฏ ุณูุฉ 2020
print(data[data["Date"] > "2020"])

# ุชุนููู ุนููุฏ "Date" ููุคุดุฑ (index) ููุจูุงูุงุช
data.set_index("Date", inplace=True)
print(data)

# ุงุณุชุฎุฑุงุฌ ุงูุจูุงูุงุช ุงูุฎุงุตุฉ ุจุณูุฉ 2020 ููุท
data1 = data.loc["2020"]
print(data1)

# ุงุณุชุฎุฑุงุฌ ุงูุจูุงูุงุช ูู ููููู 2020 ุฅูู ุณุจุชูุจุฑ 2021
data2 = data.loc["2020-06":"2021-09"]
print(data2)

# ุฑุณู ุฅุบูุงู ุงูุณูู ุฎูุงู ูุงุฑุณ 2020
plt.plot(data.loc["2020-03"]["Close"])
plt.title("Microsoft Stock Close Price - March 2020")
plt.xlabel("Date")
plt.ylabel("Close Price")
plt.grid(True)
plt.show()

# ุฑุณู ุฅุบูุงู ุงูุณูู ุฎูุงู ุนุงู 2020
print(data.loc["2020"]["Close"].plot(title="Microsoft Close Price - 2020"))
plt.xlabel("Date")
plt.ylabel("Close Price")
plt.grid(True)
plt.show()

# ุฅุนุงุฏุฉ ุชุฌููุน ุงูุจูุงูุงุช ุดูุฑููุง ูุญุณุงุจ ูุชูุณุท ุงูุณุนุฑ ุงูุฃุนูู
print(data["High"].resample('M').mean())

# ุฅุนุงุฏุฉ ุชุฌููุน ุดูุฑูุฉ ูุฅุฌุฑุงุก ุฅุญุตุงุกุงุช ูุฎุชููุฉ ุนูู ุงูุฃุนูุฏุฉ
print(data.resample("M").agg({
    "Open": "mean",
    "High": "sum",
    "Low": "min",
    "Volume": "max",
    "Close": "mean"
}))







